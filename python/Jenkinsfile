pipeline {
    agent any
    parameters {
        booleanParam(
            name: 'DOCKER_CACHE',
            defaultValue: true, 
            description: 'Define when to use the docker cache.'
        )
    }
    environment {
        IMAGE_NAME = "mmorejon/devops-python:${env.BRANCH_NAME}"
        IMAGE_NAME_BUILD = "${env.IMAGE_NAME}-b${env.BUILD_NUMBER}"
        TAG = "${env.BRANCH_NAME}-b${env.BUILD_NUMBER}"
        INSTANCE_NUMBER = 2
    }
    options { 
        buildDiscarder(logRotator(numToKeepStr: NUM_BUILDS_TO_KEEP))
        disableConcurrentBuilds()
        timeout(time: NUM_MINUTES_TO_KEEP, unit: 'MINUTES')
    }
    stages {
        stage('build') {
            steps {
                sh "docker image build \
                    ${params.DOCKER_CACHE ? '' : '--no-cache'} \
                    --tag '${IMAGE_NAME}' \
                    ./python"
            }
        }
        stage('test') {
            steps {
                echo "Without tests."
            }
        }
        stage('publish') {
            when { branch 'master' }
            steps {
                withDockerRegistry(credentialsId: 'USER_MMOREJON', url: "https://index.docker.io/v1/") {
                    sh "docker image push '${IMAGE_NAME}'"
                    sh "docker image tag '${IMAGE_NAME}' '${IMAGE_NAME_BUILD}'"
                    sh "docker image push '${IMAGE_NAME_BUILD}'"
                }
            }
        }
        stage('deploy') {
            when { branch 'master' }
            steps {
                // virtual machine deployment
                sh "docker-compose -H ${PYTHON_HOST} --project-name example -f docker-stack.yml up --detach --scale python=${env.INSTANCE_NUMBER} --remove-orphans"
                // cluster deployment
                withKubeConfig(credentialsId: CLUSTER_KUBERNETES ) {
                    sh """
                        helm upgrade \
                            --install \
                            --recreate-pods \
                            --set imageTag=${TAG} \
                            devops-python \
                            ./cluster/charts/python
                    """
                }
            }
        }
    }
    post {
        always {
            echo "Send slack notification."
        }
    }
}